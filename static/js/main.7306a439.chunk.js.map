{"version":3,"sources":["stores/store-context.ts","stores/document/index.ts","stores/document/model.ts","stores/comment/model.ts","stores/comment/store.ts","api/default-fetcher.ts","api/country-list.ts","stores/store-provider.tsx","stores/document/store.ts","stores/document/utilities.ts","layout/application/application-layout-github-fab-link.tsx","layout/application/application-layout-store.ts","layout/application/application-layout-context.tsx","layout/application/application-layout-appbar.tsx","layout/application/application-layout-constants.ts","hooks/use-toggle.ts","hooks/use-latest.ts","hooks/use-on-click-outside.ts","layout/application/navigation-config.tsx","layout/application/application-layout-drawer.tsx","layout/application/application-layout-content.tsx","layout/application/application-layout.tsx","layout/application/application-layout-route.tsx","pages/comment/comment-page-header.tsx","pages/comment/comment-page-form.tsx","pages/comment/comment-page.tsx","pages/documents/documents-page-header.tsx","components/EmptyData/EmptyData.tsx","pages/documents/document-type-icon.tsx","pages/documents/documents-page-remove-dialog.tsx","pages/documents/documents-page-list.tsx","pages/documents/documents-page-content.tsx","pages/documents/documents-page-upload-notification.tsx","pages/documents/documents-page-toolbar.tsx","pages/documents/documents-page.tsx","pages/main/main-page-header.tsx","pages/main/main-page-table-head.tsx","pages/main/main-page-table-utilities.ts","pages/main/main-page-table-config.ts","pages/main/main-page-table.tsx","pages/main/main-page-table-state.ts","pages/main/main-page-content.tsx","pages/main/main-page.tsx","routes/config.tsx","routes/index.ts","stores/index.ts","App.tsx","index.tsx"],"names":["StoreContext","createContext","useCommentStore","useContext","commentStore","useDocumentStore","documentStore","Document","name","type","id","this","nanoid","Comment","email","country","text","makeAutoObservable","CommentStore","comments","addComment","dto","comment","push","defaultJsonFetcher","url","fetch","then","res","json","COUNTRY_LIST_ENDPOINT","useCountryList","useSWR","CountriesPreloader","useEffect","mutate","Provider","StoreProvider","children","stores","useMemo","DocumentStore","value","documents","add","document","clear","remove","filter","doc","allowedMIMETypes","isAllowedDocumentType","indexOf","useStyles","makeStyles","theme","createStyles","fab","position","zIndex","right","spacing","top","GithubLink","classes","Fab","className","color","component","target","href","LayoutStore","isDrawerOpen","toggleDrawer","LayoutContext","LayoutProvider","useState","store","useApplicationLayout","appBar","transform","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginLeft","marginRight","menuButtonShift","Appbar","observer","AppBar","clsx","Toolbar","IconButton","edge","onClick","Typography","variant","noWrap","toggler","s","useToggle","defaultValue","useReducer","MOUSEDOWN","useOnClickOutside","ref","handler","handlerRef","useRef","current","useLatest","listener","event","contains","addEventListener","removeEventListener","navigationConfig","path","label","icon","drawerPaper","width","drawerHeader","mixins","toolbar","display","alignItems","padding","justifyContent","Drawer","drawerRef","pathname","useLocation","anchor","open","paper","Divider","List","map","selected","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","content","flexGrow","contentShift","pageTransitionVariants","initial","x","opacity","in","out","Content","motion","div","animate","exit","variants","root","height","overflowX","ApplicationLayout","AnimateSharedLayout","ApplicationLayoutRoute","Component","rest","render","flexDirection","avatar","margin","backgroundColor","palette","secondary","main","CommentPageHeader","Box","Avatar","container","submitButton","flag","schema","yup","shape","required","CommentPageForm","loading","setLoading","useHistory","countries","data","useForm","defaultValues","resolver","yupResolver","control","handleSubmit","register","onSubmit","setTimeout","Grid","item","xs","TextField","inputRef","fullWidth","autoComplete","autoFocus","FormControl","InputLabel","as","Select","nativeName","MenuItem","src","alt","multiline","rows","Button","CircularProgress","marginTop","CommentPage","Container","maxWidth","textAlign","DocumentsPageHeader","Paper","EmptyData","DocumentTypeIcon","RemoveDialog","documentId","onAgree","onDisagree","find","Dialog","DialogTitle","DialogActions","fadeOutSlideAnimation","DocumentsPageList","removeId","setRemoveId","isDialogOpen","toggleDialog","role","AnimatePresence","ListItemAvatar","ListItemSecondaryAction","DocumentsPageContent","length","DocumentsPageUploadNotification","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","DocumentPageToolbar","uploadedFileNotificationOpened","toggleFileNotification","addDocument","clearDocuments","hidden","multiple","accept","onChange","files","fileIdx","startIcon","reason","DocumentsPage","MainPageHeader","TableCell","withStyles","head","common","black","white","body","fontSize","MaterialTableCell","TableHead","config","order","orderBy","onRequestSort","property","field","fieldName","align","sortDirection","active","direction","descendingComparator","a","b","tableHeadConfig","MainPageTable","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","useCommentsTable","array","comparator","normalizedArray","el","index","sort","stableSort","getComparator","slice","emptyRows","Math","min","TableContainer","Table","_","TableBody","row","TableRow","hover","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","MainPageContent","MainPage","Routes","location","exitBeforeEnter","fullscreen","AppProvider","prefersDarkMode","useMediaQuery","createMuiTheme","overrides","MuiCssBaseline","html","ruRU","ThemeProvider","CssBaseline","App","getElementById"],"mappings":"wIAAA,iHAUMA,EAAeC,wBACnB,IAGF,SAASC,IAEP,OADyBC,qBAAWH,GAA5BI,aAIV,SAASC,IAEP,OAD0BF,qBAAWH,GAA7BM,gB,iCCpBV,iJ,wFCIMC,EAKJ,cAA0C,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KAAqB,yBAJzCC,QAIyC,OAHzCF,UAGyC,OAFzCC,UAEyC,EACvCE,KAAKD,GAAKE,cAEVD,KAAKH,KAAOA,EACZG,KAAKF,KAAOA,I,gGCJVI,EAOJ,cAAmD,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,KAAoB,yBAN3CN,QAM2C,OAJ3CI,MAAgB,GAI2B,KAH3CC,QAAkB,GAGyB,KAF3CC,KAAe,GAGpBC,YAAmBN,MAEnBA,KAAKD,GAAKE,cAEVD,KAAKG,MAAQA,EACbH,KAAKI,QAAUA,EACfJ,KAAKK,KAAOA,GCnBHE,EAGX,aAAe,IAAD,gCAFPC,SAA2B,GAEpB,KAIdC,WAAa,SAACC,GACZ,IAAMC,EAAU,IAAIT,EAAQQ,GAI5B,OAFA,EAAKF,SAASI,KAAKD,GAEZA,GARPL,YAAmBN,Q,qGCRvB,IAAMa,EAAqB,SAACC,GAAD,OACzBC,MAAMD,GAAKE,MAAK,SAACC,GAAD,OAASA,EAAIC,W,gBC+DzBC,EAAwB,uCAE9B,SAASC,IACP,OAAOC,YAAkBF,EAAuBN,GAGlD,SAASS,IAKP,OAJAC,qBAAU,WACRC,YAAOL,EAAuBN,EAAmBM,MAChD,IAEI,O,iCC3ET,+EAOQM,EAAapC,IAAboC,SAER,SAASC,EAAT,GAA6D,IAApCC,EAAmC,EAAnCA,SACjBC,EAASC,mBACb,iBAAO,CACLpC,aAAc,IAAIc,IAClBZ,cAAe,IAAImC,mBAErB,IAGF,OAAO,cAACL,EAAD,CAAUM,MAAOH,EAAjB,SAA0BD,M,gGCZ7BG,EAGJ,aAAe,IAAD,gCAFPE,UAA6B,GAEtB,KAIPC,IAAM,SAACvB,GACZ,IAAMwB,EAAW,IAAItC,IAASc,GAE9B,EAAKsB,UAAUpB,KAAKsB,IAPR,KAUPC,MAAQ,WACb,EAAKH,UAAY,IAXL,KAcPI,OAAS,SAACrC,GACf,EAAKiC,UAAY,EAAKA,UAAUK,QAAO,SAACC,GAAD,OAASA,EAAIvC,KAAOA,MAd3DO,YAAmBN,Q,iCCRvB,sCAAMuC,EAAmB,CAAC,kBAAmB,cAEtC,SAASC,EAAsB1C,GACpC,OAA2C,IAApCyC,EAAiBE,QAAQ3C,K,oNCD5B4C,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,IAAK,CACHC,SAAU,QACVC,OAAQ,IACRC,MAAOL,EAAMM,QAAQ,GACrBC,IAAKP,EAAMM,QAAQ,UAKzB,SAASE,IACP,IAAMC,EAAUX,IAEhB,OACE,cAACY,EAAA,EAAD,CACEC,UAAWF,EAAQP,IACnBU,MAAM,YACNC,UAAU,IACVC,OAAO,SACPC,KAAK,mDALP,SAOE,cAAC,IAAD,M,wGCxBAC,EAGJ,aAAe,IAAD,gCAFPC,cAAe,EAER,KAIPC,aAAe,WACpB,EAAKD,cAAgB,EAAKA,cAJ1BvD,YAAmBN,OCFjB+D,EAAgBzE,wBAA2B,IAEzCmC,EAAasC,EAAbtC,SAER,SAASuC,EAAT,GAA8D,IAApCrC,EAAmC,EAAnCA,SAAmC,EAC3CsC,oBAAS,kBAAM,IAAIL,KAA5BM,EADoD,oBAG3D,OAAO,cAACzC,EAAD,CAAUM,MAAOmC,EAAjB,SAAyBvC,IAGlC,SAASwC,IACP,OAAO3E,qBAAWuE,GCCpB,IAAMrB,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuB,OAAQ,CACNC,UAAU,kBACVC,WAAY1B,EAAM2B,YAAYC,OAAO,CAAC,aAAc,CAClDC,OAAQ7B,EAAM2B,YAAYE,OAAOC,MACjCC,SAAU/B,EAAM2B,YAAYI,SAASC,iBAGzCC,YAAa,CACXR,UAAU,cAAD,OC1Ba,ID0Bb,OACTC,WAAY1B,EAAM2B,YAAYC,OAAO,CAAC,aAAc,CAClDC,OAAQ7B,EAAM2B,YAAYE,OAAOK,QACjCH,SAAU/B,EAAM2B,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,WAAY,EACZC,YAAatC,EAAMM,QAAQ,GAC3BoB,WAAY1B,EAAM2B,YAAYC,OAAO,CAAC,eAAgB,CACpDC,OAAQ7B,EAAM2B,YAAYE,OAAOK,QACjCH,SAAU/B,EAAM2B,YAAYI,SAASI,kBAGzCI,gBAAiB,CACfF,YAAa,GACbX,WAAY1B,EAAM2B,YAAYC,OAAO,CAAC,eAAgB,CACpDC,OAAQ7B,EAAM2B,YAAYE,OAAOK,QACjCH,SAAU/B,EAAM2B,YAAYI,SAASC,sBAoC7C,IAAMQ,EAASC,aA9Bf,WACE,IAAMhC,EAAUX,IADI,EAEmByB,IAA/BN,EAFY,EAEZA,aAAcC,EAFF,EAEEA,aAEtB,OACE,cAACwB,EAAA,EAAD,CACEvC,SAAS,QACTQ,UAAWgC,YAAKlC,EAAQe,OAAT,eACZf,EAAQwB,YAAchB,IAH3B,SAME,eAAC2B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEjC,MAAM,UACNkC,KAAK,QACLC,QAAS7B,EACTP,UAAWgC,YAAKlC,EAAQ2B,WAAT,eACZ3B,EAAQ8B,gBAAkBtB,IAL/B,SAQE,cAAC,IAAD,MAEF,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,4C,gFEtEFC,EAAU,SAACC,GAAD,OAAiBA,GAEjC,SAASC,EAAUC,GACjB,OAAOC,qBAAWJ,EAASG,GCH7B,ICCME,EAAY,YAEX,SAASC,EACdC,EACAC,GAEA,IAAMC,EDPU,SAAIzE,GACpB,IAAMuE,EAAMG,iBAAO1E,GAMnB,OAJAR,qBAAU,WACR+E,EAAII,QAAU3E,KAGTuE,ECAYK,CAAUJ,GAE7BhF,qBAAU,WACR,GAAKgF,EAAL,CAIA,IAAMK,EAAW,SAACC,GAEbP,EAAII,SACJF,EAAWE,UACZJ,EAAII,QAAQI,SAASD,EAAMnD,SAK7B8C,EAAWE,WAKb,OAFAxE,SAAS6E,iBAAiBX,EAAWQ,GAE9B,WACL1E,SAAS8E,oBAAoBZ,EAAWQ,OAEzC,CAACL,EAASC,EAAYF,I,2DCrBrBW,GAA2C,CAC/C,CACEC,KAAM,OACNC,MAAO,6CACPC,KAAM,cAAC,IAAD,KAER,CACEF,KAAM,YACNC,MAAO,yDACPC,KAAM,cAAC,IAAD,KAER,CACEF,KAAM,cACNC,MAAO,qEACPC,KAAM,cAAC,KAAD,MCFJ1E,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwE,YAAa,CACXC,ML3BsB,KK6BxBC,aAAa,2BACR3E,EAAM4E,OAAOC,SADN,IAEVC,QAAS,OACTC,WAAY,SACZC,QAAShF,EAAMM,QAAQ,EAAG,GAC1B2E,eAAgB,kBAwDtB,IAAMC,GAASzC,aAnDf,WACE,IAAMhC,EAAUX,KACVqF,EAAYtB,mBACVuB,EAAaC,cAAbD,SAHY,EAImB7D,IAA/BN,EAJY,EAIZA,aAAcC,EAJF,EAIEA,aAQtB,OANAuC,EAAkB0B,GAAW,WACvBlE,GACFC,OAKF,eAAC,IAAD,CACEwC,IAAKyB,EACLlC,QAAQ,aACRqC,OAAO,OACPC,KAAMtE,EACNR,QAAS,CACP+E,MAAO/E,EAAQgE,aANnB,UASE,qBAAK9D,UAAWF,EAAQkE,aAAxB,SACE,cAAC9B,EAAA,EAAD,CAAYE,QAAS7B,EAArB,SACE,cAAC,IAAD,QAGJ,cAACuE,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACGrB,GAAiBsB,KAAI,YAA4B,IAAzBrB,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC9BoB,EAAWR,IAAQ,WAASd,GAElC,OACE,eAACuB,EAAA,EAAD,CACEC,QAAM,EAENjF,UAAWkF,IACXC,GAAI1B,EACJsB,SAAUA,EACV7C,QAAS7B,EANX,UAQE,cAAC+E,EAAA,EAAD,UAAezB,IACf,cAAC0B,EAAA,EAAD,CAAcC,QAAS5B,MAPlBA,c,UChEbzE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0E,aAAa,2BACR3E,EAAM4E,OAAOC,SADN,IAEVC,QAAS,OACTC,WAAY,SACZC,QAAShF,EAAMM,QAAQ,EAAG,GAC1B2E,eAAgB,aAElBmB,QAAS,CACPC,SAAU,EACVrB,QAAShF,EAAMM,QAAQ,GACvBmB,UAAU,kBACVC,WAAY1B,EAAM2B,YAAYC,OAAO,YAAa,CAChDC,OAAQ7B,EAAM2B,YAAYE,OAAOC,MACjCC,SAAU/B,EAAM2B,YAAYI,SAASC,iBAGzCsE,aAAc,CACZ5E,WAAY1B,EAAM2B,YAAYC,OAAO,YAAa,CAChDC,OAAQ7B,EAAM2B,YAAYE,OAAOK,QACjCH,SAAU/B,EAAM2B,YAAYI,SAASI,iBAEvCV,UAAU,cAAD,ONjCa,IMiCb,aAKT8E,GAAyB,CAC7BC,QAAS,CACPC,EAAG,IACHC,QAAS,GAEXC,GAAI,CACFF,EAAG,EACHC,QAAS,GAEXE,IAAK,CACHH,EAAG,IACHC,QAAS,IA2Bb,IAAMG,GAAUpE,aAvBhB,YAA2D,IAApC1D,EAAmC,EAAnCA,SACf0B,EAAUX,KACRmB,EAAiBM,IAAjBN,aAER,OACE,uBACEN,UAAWgC,YAAKlC,EAAQ2F,QAAT,eACZ3F,EAAQ6F,aAAerF,IAF5B,UAKE,qBAAKN,UAAWF,EAAQkE,eACxB,cAACmC,GAAA,EAAOC,IAAR,CACEP,QAAQ,UACRQ,QAAQ,KACRC,KAAK,MACLC,SAAUX,GAJZ,SAMGxH,UC1DHe,GAAYC,aAAW,kBAC3BE,YAAa,CACXkH,KAAM,CACJC,OAAQ,OACRtC,QAAS,OACTuC,UAAW,eAKV,SAASC,GAAT,GAAmE,IAAnCvI,EAAkC,EAAlCA,SAC/B0B,EAAUX,KAEhB,OACE,cAACsB,EAAD,UACE,cAACmG,EAAA,EAAD,UACE,sBAAK5G,UAAWgC,YAAKlC,EAAQ0G,MAA7B,UACE,cAAC3E,EAAD,IACA,cAACqE,GAAD,UAAU9H,IACV,cAAC,GAAD,IACA,cAACyB,EAAD,WCvBV,SAASgH,GAAT,GAGwB,IAFXC,EAEU,EAFrB5G,UACG6G,EACkB,6BACrB,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,kBACN,cAACL,GAAD,UACE,cAACG,EAAD,U,uDCPJ3H,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkH,KAAM,CACJrC,QAAS,OACT8C,cAAe,MACf7C,WAAY,UAEd8C,OAAQ,CACNC,OAAQ9H,EAAMM,QAAQ,GACtByH,gBAAiB/H,EAAMgI,QAAQC,UAAUC,WAK/C,SAASC,KACP,IAAM1H,EAAUX,KAEhB,OACE,eAACsI,GAAA,EAAD,CAAKzH,UAAWF,EAAQ0G,KAAxB,UACE,cAACkB,GAAA,EAAD,CAAQ1H,UAAWF,EAAQoH,OAA3B,SACE,cAAC,KAAD,MAEF,cAAC7E,EAAA,EAAD,CAAYnC,UAAU,KAAKoC,QAAQ,KAAnC,kH,qICVAnD,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqI,UAAW,CACTvD,WAAY,cAEdwD,aAAc,CACZT,OAAQ9H,EAAMM,QAAQ,EAAG,EAAG,IAE9BkI,KAAM,CACJ9D,MAAO,GACP0C,OAAQ,SAWRqB,GAASC,OAAaC,MAAM,CAChCpL,MAAOmL,OAAanL,QAAQqL,SAAS,qGACrCpL,QAASkL,OAAaE,SAAS,qGAC/BnL,KAAMiL,OAAaE,SAAS,uGAG9B,SAASC,KACP,IAAMpI,EAAUX,KADS,EAGKuB,oBAAS,GAHd,mBAGlByH,EAHkB,KAGTC,EAHS,KAKjB/K,EAASgL,cAAThL,KACMiL,EAAczK,eAApB0K,KANiB,EAOmBC,aAA2B,CACrEC,cAAe,CACb7L,MAAO,GACPC,QAAS,GACTC,KAAM,IAER4L,SAAUC,uBAAYb,MANhBc,EAPiB,EAOjBA,QAASC,EAPQ,EAORA,aAAcC,EAPN,EAOMA,SAQvB5L,EAAelB,6BAAfkB,WAER,IAAKoL,EAAW,OAAO,KAcvB,OACE,sBAAMS,SAAUF,GAbD,SAACN,GAChBrL,EAAWqL,GAENJ,IACHC,GAAW,GAEXY,YAAW,WACT3L,EAAK,WACJ,SAKL,SACE,eAAC4L,GAAA,EAAD,CAAMtB,WAAS,EAAC3H,UAAWF,EAAQ6H,UAAWhI,QAAS,EAAvD,UACE,cAACsJ,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,GAAA,EAAD,CACEjC,OAAO,SACPkC,SAAUP,EACVxG,QAAQ,WACR2F,UAAQ,EACRqB,WAAS,EACT1F,MAAM,mDACNtH,KAAK,QACLiN,aAAa,QACbC,WAAS,MAGb,cAACP,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAACM,GAAA,EAAD,CAAanH,QAAQ,WAAWgH,WAAS,EAAzC,UACE,cAACI,GAAA,EAAD,oGACA,cAAC,KAAD,CACEC,GACE,cAACC,GAAA,EAAD,CAAQhG,MAAM,wFAAkBqE,UAAQ,EAAxC,SACGK,EAAUtD,KAAI,gBAAG6E,EAAH,EAAGA,WAAYhC,EAAf,EAAeA,KAAf,OACb,eAACiC,GAAA,EAAD,CAA2BtL,MAAOqL,EAAlC,UACE,cAACvE,EAAA,EAAD,UACE,qBACEtF,UAAWF,EAAQ+H,KACnBkC,IAAKlC,EACLmC,IAAG,UAAKH,OAGXA,IARYA,QAarBvN,KAAK,UACLsM,QAASA,SAIf,cAACK,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,GAAA,EAAD,CACEnB,UAAQ,EACRoB,SAAUP,EACVQ,WAAS,EACT1F,MAAM,qEACNqG,WAAS,EACTC,KAAM,EACN5N,KAAK,OACLgG,QAAQ,eAGZ,cAAC2G,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACgB,GAAA,EAAD,CACE5N,KAAK,SACL+M,WAAS,EACThH,QAAQ,YACRrC,MAAM,UACND,UAAWF,EAAQ8H,aALrB,SAOGO,EAAU,cAACiC,GAAA,EAAD,CAAkBnK,MAAM,cAAiB,oFCzIhE,IAAMd,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuF,MAAO,CACLwF,UAAWhL,EAAMM,QAAQ,GACzB0E,QAAShF,EAAMM,QAAQ,GACvBwE,QAAS,OACT8C,cAAe,SACf7C,WAAY,eAKlB,SAASkG,KACP,IAAMxK,EAAUX,KAEhB,OACE,cAACoL,GAAA,EAAD,CAAWrK,UAAU,OAAOsK,SAAS,KAArC,SACE,sBAAKxK,UAAWF,EAAQ+E,MAAxB,UACE,cAAC2C,GAAD,IACA,cAACU,GAAD,S,cChBF/I,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkH,KAAM,CACJiE,UAAW,SACXpG,QAAShF,EAAMM,QAAQ,SAK7B,SAAS+K,KACP,IAAM5K,EAAUX,KAEhB,OACE,cAACwL,GAAA,EAAD,CAAO3K,UAAWF,EAAQ0G,KAA1B,SACE,cAACnE,EAAA,EAAD,CAAYC,QAAQ,KAApB,sECnBN,IAAMnD,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkH,KAAM,CACJrC,QAAS,OACT8C,cAAe,SACf5C,QAAS,GACTC,eAAgB,SAChBF,WAAY,SACZqG,UAAW,eAKjB,SAASG,KACP,IAAM9K,EAAUX,KAEhB,OACE,cAACgH,GAAA,EAAOC,IAAR,CACEpG,UAAWF,EAAQ0G,KACnBX,QAAS,CAAEE,QAAS,GACpBM,QAAS,CAAEN,QAAS,EAAGU,OAAQ,KAHjC,SAKE,cAACpE,EAAA,EAAD,CAAYC,QAAQ,KAApB,6J,uFChBN,SAASuI,GAAT,GAA4D,IAAhCtO,EAA+B,EAA/BA,KAC1B,MAAa,oBAATA,EAAmC,cAAC,KAAD,IAE1B,eAATA,EAA8B,cAAC,KAAD,IAE3B,K,kCCFT,SAASuO,GAAT,GAKuB,IAJrBlG,EAIoB,EAJpBA,KACAmG,EAGoB,EAHpBA,WACAC,EAEoB,EAFpBA,QACAC,EACoB,EADpBA,WAIMtM,EAFgBxC,8BAAdsC,UAEmByM,MAAK,SAACnM,GAAD,OAASA,EAAIvC,KAAOuO,KAEpD,OACE,eAACI,GAAA,EAAD,CAAQvG,KAAMA,EAAd,UACE,eAACwG,GAAA,EAAD,iOAC0CzM,QAD1C,IAC0CA,OAD1C,EAC0CA,EAAUrC,QAEpD,eAAC+O,GAAA,EAAD,WACE,cAAClB,GAAA,EAAD,CAAQ7H,QAAQ,YAAYrC,MAAM,UAAUmC,QAAS,yBAAM4I,QAAN,IAAMA,OAAN,EAAMA,KAA3D,wDAGA,cAACb,GAAA,EAAD,CACE7H,QAAQ,YACRrC,MAAM,UACNmC,QAAS,yBAAM6I,QAAN,IAAMA,OAAN,EAAMA,KACfzB,WAAS,EAJX,wDCVR,IAAM8B,GAAwB,CAC5BzF,QAAS,CAAEE,QAAS,EAAGD,GAAI,KAC3BO,QAAS,CAAEN,QAAS,EAAGD,EAAG,GAC1BQ,KAAM,CAAEP,QAAS,EAAGD,EAAG,MA2DzB,IAAMyF,GAAoBzJ,aAxD1B,WAAkC,IAAD,EACCpB,mBAAS,IADV,mBACxB8K,EADwB,KACdC,EADc,OAEM/I,GAAU,GAFhB,mBAExBgJ,EAFwB,KAEVC,EAFU,OAIDxP,8BAAtBsC,EAJuB,EAIvBA,UAAWI,EAJY,EAIZA,OAEnB,OACE,qCACE,cAACkG,EAAA,EAAD,CAAM6G,KAAK,OAAX,SACE,cAACC,EAAA,EAAD,UACGpN,EAAUuG,KAAI,YAAyB,IAAtB1I,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC5B,OACE,eAAC0I,EAAA,EAAD,yBAEEhF,UAAWiG,KAAOC,KACdkF,IAHN,cAKE,cAACQ,GAAA,EAAD,UACE,cAACpE,GAAA,EAAD,UACE,cAACmD,GAAD,CAAkBtO,KAAMA,QAG5B,cAACgJ,EAAA,EAAD,CAAcC,QAASlJ,IACvB,cAACyP,GAAA,EAAD,UACE,cAAC7J,EAAA,EAAD,yBACEjC,MAAM,UACNC,UAAWiG,KAAOhB,OAClB/C,QAAS,WACPqJ,EAAYjP,GACZmP,MAEEL,IAPN,aASE,cAAC,KAAD,YApBC9O,UA4Bf,cAACsO,GAAD,CACElG,KAAM8G,EACNX,WAAYS,EACZR,QAAS,WACPnM,EAAO2M,GACPG,KAEFV,WAAY,WACVU,aC3DV,IAAMK,GAAuBlK,aAV7B,WAGE,OAAyB,IAFH3F,8BAAdsC,UAEMwN,OACL,cAACrB,GAAD,IAGF,cAACW,GAAD,O,8DCPT,SAASW,GAAT,GAG0C,IAFxCtH,EAEuC,EAFvCA,KACAuH,EACuC,EADvCA,YAEA,OACE,cAACC,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChD3H,KAAMA,EACN4H,iBAAkB,IAClBC,QAASN,EAJX,SAME,cAACO,GAAA,EAAD,CAAOD,QAASN,EAAaQ,SAAS,UAAtC,sECFN,IAAMxN,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4E,QAAS,CACPG,QAAShF,EAAMM,QAAQ,EAAG,GAC1B2E,eAAgB,sBAKtB,SAASsI,KACP,IAAM9M,EAAUX,KAEVkK,EAAWnG,iBAAyB,MAHb,EAIoCR,GAC/D,GAL2B,mBAItBmK,EAJsB,KAIUC,EAJV,OAQuB3Q,8BAAvC4Q,EARgB,EAQrBrO,IAAyBsO,EARJ,EAQHpO,MAgC1B,OACE,eAACqD,EAAA,EAAD,CAASjC,UAAWF,EAAQoE,QAAS5B,QAAQ,QAA7C,UACE,kCACE,uBACES,IAAKsG,EACL4D,QAAM,EACNC,UAAQ,EACR3Q,KAAK,OACL4Q,OAAO,6BACPC,SA/Ba,SAAC,GAEgB,IAD1BC,EACyB,EADnClN,OAAUkN,MAEV,GAAa,MAATA,EAAe,CACjB,IAAK,IAAIC,EAAU,EAAGA,EAAUD,EAAMpB,OAAQqB,IAAW,CAAC,IAAD,EAChCD,EAAMC,GAArBhR,EAD+C,EAC/CA,KAAMC,EADyC,EACzCA,KAEV0C,iCAAsB1C,IACxBwQ,EAAY,CAAEzQ,OAAMC,SAInBsQ,GACHC,IAGEzD,EAASlG,UACXkG,EAASlG,QAAQ3E,MAAQ,QAgBzB,cAAC2L,GAAA,EAAD,CACEjK,UAAU,OACVD,MAAM,UACNqC,QAAQ,YACRiL,UAAW,cAAC,KAAD,IAJb,wHASF,cAACpD,GAAA,EAAD,CACElK,MAAM,YACNqC,QAAQ,YACRiL,UAAW,cAAC,KAAD,IACXnL,QAAS4K,EAJX,mGAQA,cAACd,GAAD,CACEtH,KAAMiI,EACNV,YA5Dc,SAAC7I,EAA8BkK,GAClC,cAAXA,GAIJV,UClCJ,SAASW,KACP,OACE,cAAClD,GAAA,EAAD,CAAWrK,UAAU,OAAOsK,SAAS,KAArC,SACE,eAACvB,GAAA,EAAD,CAAMtB,WAAS,EAAChI,QAAS,EAAzB,UACE,cAACsJ,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACuB,GAAD,MAEF,cAACzB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAACwB,GAAA,EAAD,WACE,cAACiC,GAAD,IACA,cAAC9H,EAAA,EAAD,IACA,cAACkH,GAAD,cCTZ,IAAM7M,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkH,KAAM,CACJiE,UAAW,SACXpG,QAAShF,EAAMM,QAAQ,SAK7B,SAAS+N,KACP,IAAM5N,EAAUX,KAEhB,OACE,cAACwL,GAAA,EAAD,CAAO3K,UAAWF,EAAQ0G,KAA1B,SACE,cAACnE,EAAA,EAAD,CAAYC,QAAQ,KAApB,kF,4FCAAqL,GAAYC,cAAW,SAACvO,GAAD,OAC3BC,YAAa,CACXuO,KAAM,CACJzG,gBAAiB/H,EAAMgI,QAAQyG,OAAOC,MACtC9N,MAAOZ,EAAMgI,QAAQyG,OAAOE,OAE9BC,KAAM,CACJC,SAAU,QAPEN,CAUhBO,MAEF,SAASC,GAAT,GAA+E,IAA1DC,EAAyD,EAAzDA,OAAQC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,cAO3C,OACE,cAAC,KAAD,UACE,cAAC,KAAD,UACGH,EAAOrJ,KAAI,gBATSyJ,EASNC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAWC,EAArB,EAAqBA,MAArB,OACV,cAAC,GAAD,CAEEA,MAAOA,EACPC,cAAeN,IAAYG,GAAQJ,EAHrC,SAKE,cAAC,KAAD,CACEQ,OAAQP,IAAYG,EACpBK,UAAWR,IAAYG,EAAQJ,EAAQ,MACvClM,SAlBeqM,EAkBYC,EAlBmB,SACxDpL,GAEAkL,EAAclL,EAAOmL,KAYb,SAKGE,KATED,UChBV,SAASM,GAAwBC,EAAMC,EAAMX,GAClD,OAAIW,EAAEX,GAAWU,EAAEV,IACT,EAENW,EAAEX,GAAWU,EAAEV,GACV,EAEF,ECnCT,IAAMY,GAAkC,CACtC,CACET,MAAO,QACPC,UAAW,QACXC,MAAO,QAET,CAAEF,MAAO,OAAQC,UAAW,qEAAeC,MAAO,UAClD,CAAEF,MAAO,UAAWC,UAAW,uCAAUC,MAAO,UCU3C,SAASQ,KAAiB,IACvBnS,EAAajB,6BAAbiB,SADsB,ECVhC,WAA6B,IAAD,EACAyD,mBANC,OAKD,mBACnB4N,EADmB,KACZe,EADY,OAEI3O,mBANc,SAIlB,mBAEnB6N,EAFmB,KAEVe,EAFU,OAGF5O,mBANL,GAGO,mBAGnB6O,EAHmB,KAGbC,EAHa,OAIY9O,mBANV,GAEF,mBAM1B,MAAO,CACL4N,QACAe,WACAd,UACAe,aACAC,OACAC,UACAC,YAbwB,KAcxBC,eAdwB,MDqBtBC,GARFrB,EAH4B,EAG5BA,MACAe,EAJ4B,EAI5BA,SACAd,EAL4B,EAK5BA,QACAe,EAN4B,EAM5BA,WACAC,EAP4B,EAO5BA,KACAC,EAR4B,EAQ5BA,QACAC,EAT4B,EAS5BA,YACAC,EAV4B,EAU5BA,eAGIxF,EAAO5L,mBACX,kBF/BG,SAAuBsR,EAAYC,GACxC,IAAMC,EAAkBF,EAAM5K,KAAI,SAAC+K,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAYtD,OAVAF,EAAgBG,MAAK,SAAChB,EAAGC,GACvB,IAAMZ,EAAQuB,EAAWZ,EAAE,GAAIC,EAAE,IAEjC,OAAc,IAAVZ,EACKA,EAGFW,EAAE,GAAKC,EAAE,MAGXY,EAAgB9K,KAAI,SAAC+K,GAAD,OAAQA,EAAG,MEmBlCG,CAAWjT,EFhBV,SACLqR,EACAC,GAKA,MAAiB,SAAVD,EACH,SAACW,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGX,IACrC,SAACU,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGX,IEOjB4B,CAAc7B,EAAOC,IAAU6B,MAClDb,EAAOE,EACPF,EAAOE,EAAcA,KAEzB,CAACxS,EAAUqR,EAAOC,EAASgB,EAAME,IAuB7BY,EACJZ,EAAca,KAAKC,IAAId,EAAavF,EAAK+B,OAASsD,EAAOE,GAE3D,OACE,eAACe,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,cAAC,GAAD,CACEpC,OAAQc,GACRb,MAAOA,EACPC,QAASA,EACTC,cA9BkB,SACxBkC,EACAjC,GAGAY,EADcd,IAAYE,GAAsB,QAAVH,EACrB,OAAS,OAC1BgB,EAAWb,MA0BP,eAACkC,GAAA,EAAD,WACGzG,EAAKlF,KAAI,SAAC4L,GACT,OACE,eAACC,GAAA,EAAD,CAAUC,OAAK,EAAf,UACE,cAACnD,GAAA,EAAD,CAAWiB,MAAM,OAAjB,SAAyBgC,EAAIhU,QAC7B,cAAC+Q,GAAA,EAAD,CAAWiB,MAAM,SAAjB,SAA2BgC,EAAI9T,OAC/B,cAAC6Q,GAAA,EAAD,CAAWiB,MAAM,QAAjB,SAA0BgC,EAAI/T,YAHX+T,EAAIhU,UAO5ByT,EAAY,GACX,cAACQ,GAAA,EAAD,CAAUE,MAAO,CAAEtK,OAAQ,GAAK4J,GAAhC,SACE,cAAC1C,GAAA,EAAD,CAAWqD,QAAS,YAK5B,cAACC,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BhR,UAAU,MACViR,MAAOjH,EAAK+B,OACZwD,YAAaA,EACbF,KAAMA,EACN6B,aA9CmB,SAACV,EAAYW,GACpC7B,EAAQ6B,IA8CJC,oBA3C0B,SAC9BhO,GAEAoM,EAAe6B,SAASjO,EAAMnD,OAAO3B,MAAO,KAC5CgR,EAAQ,SEzCZ,IAAMgC,GAAkB1P,aAVxB,WAGE,OAAwB,IAFH9F,6BAAbiB,SAEKgP,OACJ,cAACrB,GAAD,IAGF,cAACwE,GAAD,OCTT,SAASqC,KACP,OACE,cAAClH,GAAA,EAAD,CAAWrK,UAAU,OAArB,SACE,eAAC+I,GAAA,EAAD,CAAMtB,WAAS,EAAChI,QAAS,EAAzB,UACE,cAACsJ,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACuE,GAAD,MAEF,cAACzE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACwB,GAAA,EAAD,UACE,cAAC6G,GAAD,aCRZ,SAASE,KACP,IAAMC,EAAWjN,cAEjB,OACE,cAACmH,EAAA,EAAD,CAAiB+F,iBAAe,EAAhC,SACE,eAAC,IAAD,CAAgCD,SAAUA,EAA1C,UACE,cAAC9K,GAAD,CAAwBlD,KAAK,QAAQzD,UAAWuR,KAChD,cAAC5K,GAAD,CAAwBlD,KAAK,aAAazD,UAAWuN,KACrD,cAAC5G,GAAD,CAAwBlD,KAAK,eAAezD,UAAWoK,KAEvD,cAAC,IAAD,CAAUjF,GAAG,YALFsM,EAASlN,c,iCCX5B,8D,gCCAA,gT,gKCeMoN,EAAa,CAAE9N,MAAO,OAAQ0C,OAAQ,QA4C7BqL,MA1Cf,WACE,IAAMC,EAAkBC,YAAc,gCAEhC3S,EAAQf,mBACZ,kBACE2T,YACE,CACE5K,QAAS,CACP9K,KAAMwV,EAAkB,OAAS,SAEnCG,UAAW,CACTC,eAAgB,CACd,UAAU,aACRC,KAAK,eAAMP,GACX5D,KAAK,eAAM4D,IACV,QAHH,2BAIOA,GAJP,IAKI1N,QAAS,OACT8C,cAAe,eAMzBoL,UAEJ,CAACN,IAGH,OACE,cAAC,gBAAD,UACE,cAACO,EAAA,EAAD,CAAejT,MAAOA,EAAtB,SACE,eAAC,IAAD,WACE,cAACkT,EAAA,EAAD,IACA,cAAC,IAAD,IACA,cAAC,SAAD,YChDVvL,iBAAO,cAACwL,EAAD,IAAS7T,SAAS8T,eAAe,W","file":"static/js/main.7306a439.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nimport { CommentStore } from \"./comment\";\nimport { DocumentStore } from \"./document\";\n\ninterface StoreContextInterface {\n  commentStore: CommentStore;\n  documentStore: DocumentStore;\n}\n\nconst StoreContext = createContext<StoreContextInterface>(\n  {} as StoreContextInterface\n);\n\nfunction useCommentStore() {\n  const { commentStore } = useContext(StoreContext);\n  return commentStore;\n}\n\nfunction useDocumentStore() {\n  const { documentStore } = useContext(StoreContext);\n  return documentStore;\n}\n\nexport { StoreContext, useCommentStore, useDocumentStore };\n","export * from \"./model\";\nexport * from \"./store\";\nexport * from \"./utilities\";\nexport * from \"./types\";\n","import { nanoid } from \"nanoid\";\n\nimport type { DocumentDTO, DocumentType } from \"./types\";\n\nclass Document {\n  id: string;\n  name: string;\n  type: DocumentType;\n\n  constructor({ name, type }: DocumentDTO) {\n    this.id = nanoid();\n\n    this.name = name;\n    this.type = type;\n  }\n}\n\nexport { Document };\n","import { makeAutoObservable } from \"mobx\";\nimport { nanoid } from \"nanoid\";\n\nexport interface CommentDTO {\n  email: string;\n  country: string;\n  text: string;\n}\n\nclass Comment {\n  public id: string;\n\n  public email: string = \"\";\n  public country: string = \"\";\n  public text: string = \"\";\n\n  constructor({ email, country, text }: CommentDTO) {\n    makeAutoObservable(this);\n\n    this.id = nanoid();\n\n    this.email = email;\n    this.country = country;\n    this.text = text;\n  }\n}\n\nexport { Comment };\n","import { makeAutoObservable } from \"mobx\";\n\nimport { Comment, CommentDTO } from \"./model\";\n\nexport class CommentStore {\n  public comments: Array<Comment> = [];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  addComment = (dto: CommentDTO) => {\n    const comment = new Comment(dto);\n\n    this.comments.push(comment);\n\n    return comment;\n  };\n}\n","const defaultJsonFetcher = (url: string) =>\n  fetch(url).then((res) => res.json());\n\nexport { defaultJsonFetcher };\n","import { useEffect } from \"react\";\nimport useSWR, { mutate } from \"swr\";\nimport { defaultJsonFetcher } from \"./default-fetcher\";\n\nexport interface Currency {\n  code: string;\n  name: string;\n  symbol: string;\n}\n\nexport interface Language {\n  iso639_1: string;\n  iso639_2: string;\n  name: string;\n  nativeName: string;\n}\n\nexport interface Translations {\n  de: string;\n  es: string;\n  fr: string;\n  ja: string;\n  it: string;\n  br: string;\n  pt: string;\n  nl: string;\n  hr: string;\n  fa: string;\n}\n\nexport interface RegionalBlock {\n  acronym: string;\n  name: string;\n  otherAcronyms: any[];\n  otherNames: any[];\n}\n\nexport interface Country {\n  name: string;\n  topLevelDomain: string[];\n  alpha2Code: string;\n  alpha3Code: string;\n  callingCodes: string[];\n  capital: string;\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  population: number;\n  latlng: number[];\n  demonym: string;\n  area: number;\n  gini: number;\n  timezones: string[];\n  borders: string[];\n  nativeName: string;\n  numericCode: string;\n  currencies: Currency[];\n  languages: Language[];\n  translations: Translations;\n  flag: string;\n  regionalBlocs: RegionalBlock[];\n  cioc: string;\n}\n\nconst COUNTRY_LIST_ENDPOINT = \"https://restcountries.eu/rest/v2/all\";\n\nfunction useCountryList() {\n  return useSWR<Country[]>(COUNTRY_LIST_ENDPOINT, defaultJsonFetcher);\n}\n\nfunction CountriesPreloader() {\n  useEffect(() => {\n    mutate(COUNTRY_LIST_ENDPOINT, defaultJsonFetcher(COUNTRY_LIST_ENDPOINT));\n  }, []);\n\n  return null;\n}\n\nexport { COUNTRY_LIST_ENDPOINT };\nexport { useCountryList, CountriesPreloader };\n","import { useMemo, PropsWithChildren } from \"react\";\n\nimport { StoreContext } from \"./store-context\";\n\nimport { CommentStore } from \"./comment\";\nimport { DocumentStore } from \"./document\";\n\nconst { Provider } = StoreContext;\n\nfunction StoreProvider({ children }: PropsWithChildren<{}>) {\n  const stores = useMemo(\n    () => ({\n      commentStore: new CommentStore(),\n      documentStore: new DocumentStore(),\n    }),\n    []\n  );\n\n  return <Provider value={stores}>{children}</Provider>;\n}\n\nexport { StoreProvider };\n","import { makeAutoObservable } from \"mobx\";\n\nimport { Document } from \"./model\";\n\nimport { DocumentDTO } from \"./types\";\n\nclass DocumentStore {\n  public documents: Array<Document> = [];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  public add = (dto: DocumentDTO) => {\n    const document = new Document(dto);\n\n    this.documents.push(document);\n  };\n\n  public clear = () => {\n    this.documents = [];\n  };\n\n  public remove = (id: string) => {\n    this.documents = this.documents.filter((doc) => doc.id !== id);\n  };\n}\n\nexport { DocumentStore };\n","import type { DocumentType } from \"./types\";\n\nconst allowedMIMETypes = [\"application/pdf\", \"image/jpeg\"];\n\nexport function isAllowedDocumentType(type: string): type is DocumentType {\n  return allowedMIMETypes.indexOf(type) !== -1;\n}\n","import { makeStyles, Theme, createStyles, Fab } from \"@material-ui/core\";\n\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"fixed\",\n      zIndex: 10000,\n      right: theme.spacing(2),\n      top: theme.spacing(0.5),\n    },\n  })\n);\n\nfunction GithubLink() {\n  const classes = useStyles();\n\n  return (\n    <Fab\n      className={classes.fab}\n      color=\"secondary\"\n      component=\"a\"\n      target=\"_blank\"\n      href=\"https://github.com/alxrgv/utip-coding-assignment\"\n    >\n      <GitHubIcon />\n    </Fab>\n  );\n}\n\nexport { GithubLink };\n","import { makeAutoObservable } from \"mobx\";\n\nclass LayoutStore {\n  public isDrawerOpen = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  public toggleDrawer = () => {\n    this.isDrawerOpen = !this.isDrawerOpen;\n  };\n}\n\nexport { LayoutStore };\n","import { createContext, useContext, useState, PropsWithChildren } from \"react\";\n\nimport { LayoutStore } from \"./application-layout-store\";\n\nconst LayoutContext = createContext<LayoutStore>({} as LayoutStore);\n\nconst { Provider } = LayoutContext;\n\nfunction LayoutProvider({ children }: PropsWithChildren<{}>) {\n  const [store] = useState(() => new LayoutStore());\n\n  return <Provider value={store}>{children}</Provider>;\n}\n\nfunction useApplicationLayout() {\n  return useContext(LayoutContext);\n}\n\nexport { LayoutProvider, useApplicationLayout };\n","import clsx from \"clsx\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { DRAWER_WIDTH } from \"./application-layout-constants\";\nimport { useApplicationLayout } from \"./application-layout-context\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      transform: `translateX(0px)`,\n      transition: theme.transitions.create([\"transform\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      transform: `translateX(${DRAWER_WIDTH}px)`,\n      transition: theme.transitions.create([\"transform\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginLeft: 0,\n      marginRight: theme.spacing(2),\n      transition: theme.transitions.create([\"margin-left\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButtonShift: {\n      marginLeft: -64,\n      transition: theme.transitions.create([\"margin-left\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n  })\n);\n\nfunction AppbarBase() {\n  const classes = useStyles();\n  const { isDrawerOpen, toggleDrawer } = useApplicationLayout();\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: isDrawerOpen,\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          edge=\"start\"\n          onClick={toggleDrawer}\n          className={clsx(classes.menuButton, {\n            [classes.menuButtonShift]: isDrawerOpen,\n          })}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" noWrap>\n          UTIP Coding Assignment\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nconst Appbar = observer(AppbarBase);\n\nexport { Appbar };\n","export const DRAWER_WIDTH = 200;\n","import { useReducer } from \"react\";\n\nconst toggler = (s: boolean) => !s;\n\nfunction useToggle(defaultValue: boolean) {\n  return useReducer(toggler, defaultValue);\n}\n\nexport { useToggle };\n","import { useRef, useEffect } from \"react\";\n\nconst useLatest = <T>(value: T) => {\n  const ref = useRef(value);\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref;\n};\n\nexport { useLatest };\n","import { useEffect, MutableRefObject } from \"react\";\nimport { useLatest } from \"./use-latest\";\n\nconst MOUSEDOWN = \"mousedown\";\n\nexport function useOnClickOutside(\n  ref: MutableRefObject<HTMLElement | undefined>,\n  handler: () => void | null\n) {\n  const handlerRef = useLatest(handler);\n\n  useEffect(() => {\n    if (!handler) {\n      return;\n    }\n\n    const listener = (event: MouseEvent) => {\n      if (\n        !ref.current ||\n        !handlerRef.current ||\n        ref.current.contains(event.target as Node)\n      ) {\n        return;\n      }\n\n      handlerRef.current();\n    };\n\n    document.addEventListener(MOUSEDOWN, listener);\n\n    return () => {\n      document.removeEventListener(MOUSEDOWN, listener);\n    };\n  }, [handler, handlerRef, ref]);\n}\n","import HomeIcon from \"@material-ui/icons/Home\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\n\nimport { RoutePath } from \"../../routes\";\n\ninterface NavigationConfigItem {\n  path: RoutePath;\n  label: string;\n  icon: JSX.Element;\n}\n\nconst navigationConfig: NavigationConfigItem[] = [\n  {\n    path: \"main\",\n    label: \"Главная\",\n    icon: <HomeIcon />,\n  },\n  {\n    path: \"documents\",\n    label: \"Документы\",\n    icon: <DescriptionIcon />,\n  },\n  {\n    path: \"new-comment\",\n    label: \"Комментарии\",\n    icon: <CommentIcon />,\n  },\n];\n\nexport { navigationConfig };\n","import { useRef } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Drawer as MaterialDrawer,\n  List,\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n} from \"@material-ui/core\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\nimport { useOnClickOutside } from \"../../hooks\";\nimport { useApplicationLayout } from \"./application-layout-context\";\nimport { navigationConfig } from \"./navigation-config\";\n\nimport { DRAWER_WIDTH } from \"./application-layout-constants\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawerPaper: {\n      width: DRAWER_WIDTH,\n    },\n    drawerHeader: {\n      ...theme.mixins.toolbar,\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      justifyContent: \"flex-end\",\n    },\n  })\n);\n\nfunction DrawerBase() {\n  const classes = useStyles();\n  const drawerRef = useRef<HTMLElement>();\n  const { pathname } = useLocation();\n  const { isDrawerOpen, toggleDrawer } = useApplicationLayout();\n\n  useOnClickOutside(drawerRef, () => {\n    if (isDrawerOpen) {\n      toggleDrawer();\n    }\n  });\n\n  return (\n    <MaterialDrawer\n      ref={drawerRef}\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={isDrawerOpen}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {navigationConfig.map(({ path, label, icon }) => {\n          const selected = pathname === `/${path}`;\n\n          return (\n            <ListItem\n              button\n              key={label}\n              component={Link}\n              to={path}\n              selected={selected}\n              onClick={toggleDrawer}\n            >\n              <ListItemIcon>{icon}</ListItemIcon>\n              <ListItemText primary={label} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </MaterialDrawer>\n  );\n}\n\nconst Drawer = observer(DrawerBase);\n\nexport { Drawer };\n","import clsx from \"clsx\";\nimport { observer } from \"mobx-react-lite\";\nimport { motion } from \"framer-motion\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\n\nimport type { PropsWithChildren } from \"react\";\n\nimport { DRAWER_WIDTH } from \"./application-layout-constants\";\nimport { useApplicationLayout } from \"./application-layout-context\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawerHeader: {\n      ...theme.mixins.toolbar,\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      justifyContent: \"flex-end\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transform: `translateX(0px)`,\n      transition: theme.transitions.create(\"transform\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"transform\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      transform: `translateX(${DRAWER_WIDTH}px)`,\n    },\n  })\n);\n\nconst pageTransitionVariants = {\n  initial: {\n    x: 100,\n    opacity: 0,\n  },\n  in: {\n    x: 0,\n    opacity: 1,\n  },\n  out: {\n    x: 100,\n    opacity: 0,\n  },\n};\n\nfunction ContentBase({ children }: PropsWithChildren<{}>) {\n  const classes = useStyles();\n  const { isDrawerOpen } = useApplicationLayout();\n\n  return (\n    <main\n      className={clsx(classes.content, {\n        [classes.contentShift]: isDrawerOpen,\n      })}\n    >\n      <div className={classes.drawerHeader} />\n      <motion.div\n        initial=\"initial\"\n        animate=\"in\"\n        exit=\"out\"\n        variants={pageTransitionVariants}\n      >\n        {children}\n      </motion.div>\n    </main>\n  );\n}\n\nconst Content = observer(ContentBase);\n\nexport { Content };\n","import clsx from \"clsx\";\nimport { AnimateSharedLayout } from \"framer-motion\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nimport type { PropsWithChildren } from \"react\";\n\nimport { GithubLink } from \"./application-layout-github-fab-link\";\nimport { Appbar } from \"./application-layout-appbar\";\nimport { Drawer } from \"./application-layout-drawer\";\nimport { Content } from \"./application-layout-content\";\nimport { LayoutProvider } from \"./application-layout-context\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      display: \"flex\",\n      overflowX: \"hidden\",\n    },\n  })\n);\n\nexport function ApplicationLayout<P>({ children }: PropsWithChildren<P>) {\n  const classes = useStyles();\n\n  return (\n    <LayoutProvider>\n      <AnimateSharedLayout>\n        <div className={clsx(classes.root)}>\n          <Appbar />\n          <Content>{children}</Content>\n          <Drawer />\n          <GithubLink />\n        </div>\n      </AnimateSharedLayout>\n    </LayoutProvider>\n  );\n}\n","import { FunctionComponent, ComponentClass } from \"react\";\nimport { Route, RouteProps } from \"react-router-dom\";\n\nimport { ApplicationLayout } from \"./application-layout\";\n\ninterface DefaultLayoutProps extends RouteProps {\n  component: FunctionComponent | ComponentClass;\n}\n\nfunction ApplicationLayoutRoute({\n  component: Component,\n  ...rest\n}: DefaultLayoutProps) {\n  return (\n    <Route\n      {...rest}\n      render={() => (\n        <ApplicationLayout>\n          <Component />\n        </ApplicationLayout>\n      )}\n    />\n  );\n}\n\nexport { ApplicationLayoutRoute };\n","import {\n  createStyles,\n  makeStyles,\n  Theme,\n  Avatar,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\n\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n  })\n);\n\nfunction CommentPageHeader() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Avatar className={classes.avatar}>\n        <AddCommentIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Новый комментарий\n      </Typography>\n    </Box>\n  );\n}\n\nexport { CommentPageHeader };\n","import { useState } from \"react\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  ListItemIcon,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  Grid,\n  Button,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport { useCountryList } from \"../../api\";\nimport { useCommentStore } from \"../../stores\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      alignItems: \"flex-start\",\n    },\n    submitButton: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    flag: {\n      width: 24,\n      height: 12,\n    },\n  })\n);\n\ninterface CommentFormValues {\n  email: string;\n  country: string;\n  text: string;\n}\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(\"Обязательное поле\"),\n  country: yup.string().required(\"Обязательное поле\"),\n  text: yup.string().required(\"Обязательное поле\"),\n});\n\nfunction CommentPageForm() {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n\n  const { push } = useHistory();\n  const { data: countries } = useCountryList();\n  const { control, handleSubmit, register } = useForm<CommentFormValues>({\n    defaultValues: {\n      email: \"\",\n      country: \"\",\n      text: \"\",\n    },\n    resolver: yupResolver(schema),\n  });\n  const { addComment } = useCommentStore();\n\n  if (!countries) return null;\n\n  const onSubmit = (data: CommentFormValues) => {\n    addComment(data);\n\n    if (!loading) {\n      setLoading(true);\n\n      setTimeout(() => {\n        push(\"/main\");\n      }, 1000);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Grid container className={classes.container} spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            margin=\"normal\"\n            inputRef={register}\n            variant=\"outlined\"\n            required\n            fullWidth\n            label=\"Введите email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel>Выберите страну</InputLabel>\n            <Controller\n              as={\n                <Select label=\"Выберите страну\" required>\n                  {countries.map(({ nativeName, flag }) => (\n                    <MenuItem key={nativeName} value={nativeName}>\n                      <ListItemIcon>\n                        <img\n                          className={classes.flag}\n                          src={flag}\n                          alt={`${nativeName}`}\n                        />\n                      </ListItemIcon>\n                      {nativeName}\n                    </MenuItem>\n                  ))}\n                </Select>\n              }\n              name=\"country\"\n              control={control}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            inputRef={register}\n            fullWidth\n            label=\"Комментарий\"\n            multiline\n            rows={4}\n            name=\"text\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submitButton}\n          >\n            {loading ? <CircularProgress color=\"secondary\" /> : \"Опубликовать\"}\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport { CommentPageForm };\n","import { createStyles, makeStyles, Theme, Container } from \"@material-ui/core\";\n\nimport { CommentPageHeader } from \"./comment-page-header\";\nimport { CommentPageForm } from \"./comment-page-form\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(8),\n      padding: theme.spacing(2),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n  })\n);\n\nfunction CommentPage() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <CommentPageHeader />\n        <CommentPageForm />\n      </div>\n    </Container>\n  );\n}\n\nexport { CommentPage };\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textAlign: \"center\",\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nfunction DocumentsPageHeader() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h5\">Документы</Typography>\n    </Paper>\n  );\n}\n\nexport { DocumentsPageHeader };\n","import { makeStyles, Theme, createStyles, Typography } from \"@material-ui/core\";\nimport { motion } from \"framer-motion\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      padding: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n    },\n  })\n);\n\nfunction EmptyData() {\n  const classes = useStyles();\n\n  return (\n    <motion.div\n      className={classes.root}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, height: 180 }}\n    >\n      <Typography variant=\"h5\">Нет данных для отображения</Typography>\n    </motion.div>\n  );\n}\n\nexport { EmptyData };\n","import { DocumentType } from \"../../stores\";\n\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport ImageIcon from \"@material-ui/icons/Image\";\n\ninterface DocumentTypeIconProps {\n  type: DocumentType;\n}\n\nfunction DocumentTypeIcon({ type }: DocumentTypeIconProps) {\n  if (type === \"application/pdf\") return <PictureAsPdfIcon />;\n\n  if (type === \"image/jpeg\") return <ImageIcon />;\n\n  return null;\n}\n\nexport { DocumentTypeIcon };\n","import { Dialog, DialogTitle, DialogActions, Button } from \"@material-ui/core\";\n\nimport { useDocumentStore } from \"../../stores\";\n\ninterface RemoveDialogProps {\n  open: boolean;\n  documentId: string;\n\n  onAgree?: () => void;\n  onDisagree?: () => void;\n}\n\nfunction RemoveDialog({\n  open,\n  documentId,\n  onAgree,\n  onDisagree,\n}: RemoveDialogProps) {\n  const { documents } = useDocumentStore();\n\n  const document = documents.find((doc) => doc.id === documentId);\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        Вы уверены что хотите удалить документ {document?.name}\n      </DialogTitle>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => onAgree?.()}>\n          Удалить\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onDisagree?.()}\n          autoFocus\n        >\n          Отмена\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport { RemoveDialog };\n","import { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport { useToggle } from \"../../hooks\";\nimport { useDocumentStore } from \"../../stores\";\n\nimport { DocumentTypeIcon } from \"./document-type-icon\";\nimport { RemoveDialog } from \"./documents-page-remove-dialog\";\n\nconst fadeOutSlideAnimation = {\n  initial: { opacity: 0, x: -100 },\n  animate: { opacity: 1, x: 0 },\n  exit: { opacity: 0, x: 100 },\n};\n\nfunction DocumentsPageListBase() {\n  const [removeId, setRemoveId] = useState(\"\");\n  const [isDialogOpen, toggleDialog] = useToggle(false);\n\n  const { documents, remove } = useDocumentStore();\n\n  return (\n    <>\n      <List role=\"list\">\n        <AnimatePresence>\n          {documents.map(({ name, type, id }) => {\n            return (\n              <ListItem\n                key={id}\n                component={motion.div}\n                {...fadeOutSlideAnimation}\n              >\n                <ListItemAvatar>\n                  <Avatar>\n                    <DocumentTypeIcon type={type} />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={name} />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    color=\"inherit\"\n                    component={motion.button}\n                    onClick={() => {\n                      setRemoveId(id);\n                      toggleDialog();\n                    }}\n                    {...fadeOutSlideAnimation}\n                  >\n                    <DeleteForeverIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n      <RemoveDialog\n        open={isDialogOpen}\n        documentId={removeId}\n        onAgree={() => {\n          remove(removeId);\n          toggleDialog();\n        }}\n        onDisagree={() => {\n          toggleDialog();\n        }}\n      />\n    </>\n  );\n}\n\nconst DocumentsPageList = observer(DocumentsPageListBase);\n\nexport { DocumentsPageList };\n","import { observer } from \"mobx-react-lite\";\nimport { useDocumentStore } from \"../../stores\";\n\nimport { EmptyData } from \"../../components\";\n\nimport { DocumentsPageList } from \"./documents-page-list\";\n\nfunction DocumentsPageContentBase() {\n  const { documents } = useDocumentStore();\n\n  if (documents.length === 0) {\n    return <EmptyData />;\n  }\n\n  return <DocumentsPageList />;\n}\n\nconst DocumentsPageContent = observer(DocumentsPageContentBase);\n\nexport { DocumentsPageContent };\n","import { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\ninterface DocumentsPageUploadNotificationProps {\n  open: boolean;\n  handleClose: (event?: React.SyntheticEvent, reason?: string) => void;\n}\n\nfunction DocumentsPageUploadNotification({\n  open,\n  handleClose,\n}: DocumentsPageUploadNotificationProps) {\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      open={open}\n      autoHideDuration={5000}\n      onClose={handleClose}\n    >\n      <Alert onClose={handleClose} severity=\"success\">\n        Загружено\n      </Alert>\n    </Snackbar>\n  );\n}\n\nexport { DocumentsPageUploadNotification };\n","import { useRef, ChangeEvent } from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  Toolbar,\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\n\nimport { useToggle } from \"../../hooks\";\nimport { useDocumentStore, isAllowedDocumentType } from \"../../stores\";\nimport { DocumentsPageUploadNotification } from \"./documents-page-upload-notification\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolbar: {\n      padding: theme.spacing(2, 2),\n      justifyContent: \"space-between\",\n    },\n  })\n);\n\nfunction DocumentPageToolbar() {\n  const classes = useStyles();\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [uploadedFileNotificationOpened, toggleFileNotification] = useToggle(\n    false\n  );\n\n  const { add: addDocument, clear: clearDocuments } = useDocumentStore();\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    toggleFileNotification();\n  };\n\n  const handleUpload = ({\n    target: { files },\n  }: ChangeEvent<HTMLInputElement>) => {\n    if (files != null) {\n      for (let fileIdx = 0; fileIdx < files.length; fileIdx++) {\n        const { name, type } = files[fileIdx];\n\n        if (isAllowedDocumentType(type)) {\n          addDocument({ name, type });\n        }\n      }\n\n      if (!uploadedFileNotificationOpened) {\n        toggleFileNotification();\n      }\n\n      if (inputRef.current) {\n        inputRef.current.value = \"\";\n      }\n    }\n  };\n\n  return (\n    <Toolbar className={classes.toolbar} variant=\"dense\">\n      <label>\n        <input\n          ref={inputRef}\n          hidden\n          multiple\n          type=\"file\"\n          accept=\"image/jpeg,application/pdf\"\n          onChange={handleUpload}\n        />\n        <Button\n          component=\"span\"\n          color=\"default\"\n          variant=\"contained\"\n          startIcon={<CloudUploadIcon />}\n        >\n          Загрузить документ\n        </Button>\n      </label>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        startIcon={<DeleteIcon />}\n        onClick={clearDocuments}\n      >\n        Очистить список\n      </Button>\n      <DocumentsPageUploadNotification\n        open={uploadedFileNotificationOpened}\n        handleClose={handleClose}\n      />\n    </Toolbar>\n  );\n}\n\nexport { DocumentPageToolbar };\n","import { Container, Paper, Divider, Grid } from \"@material-ui/core\";\n\nimport { DocumentsPageHeader } from \"./documents-page-header\";\nimport { DocumentsPageContent } from \"./documents-page-content\";\nimport { DocumentPageToolbar } from \"./documents-page-toolbar\";\n\nfunction DocumentsPage() {\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <DocumentsPageHeader />\n        </Grid>\n        <Grid item xs={12}>\n          <Paper>\n            <DocumentPageToolbar />\n            <Divider />\n            <DocumentsPageContent />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport { DocumentsPage };\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textAlign: \"center\",\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nfunction MainPageHeader() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h5\">Комментарии</Typography>\n    </Paper>\n  );\n}\n\nexport { MainPageHeader };\n","import {\n  withStyles,\n  createStyles,\n  Theme,\n  TableCell as MaterialTableCell,\n  TableHead as MaterialTableHead,\n  TableRow as MaterialTableRow,\n  TableSortLabel as MaterialTableSortLabel,\n} from \"@material-ui/core\";\n\nimport type { Order, PossibleDataKeys, ColumnConfig } from \"./types\";\n\ninterface TableHeadProps {\n  config: ColumnConfig[];\n  order: Order;\n  orderBy: string;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: PossibleDataKeys\n  ) => void;\n}\n\nconst TableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(MaterialTableCell);\n\nfunction TableHead({ config, order, orderBy, onRequestSort }: TableHeadProps) {\n  const createSortHandler = (property: PossibleDataKeys) => (\n    event: React.MouseEvent<unknown>\n  ) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <MaterialTableHead>\n      <MaterialTableRow>\n        {config.map(({ field, fieldName, align }) => (\n          <TableCell\n            key={field}\n            align={align}\n            sortDirection={orderBy === field ? order : false}\n          >\n            <MaterialTableSortLabel\n              active={orderBy === field}\n              direction={orderBy === field ? order : \"asc\"}\n              onClick={createSortHandler(field)}\n            >\n              {fieldName}\n            </MaterialTableSortLabel>\n          </TableCell>\n        ))}\n      </MaterialTableRow>\n    </MaterialTableHead>\n  );\n}\n\nexport { TableHead };\n","import { Order } from \"./types\";\n\nexport function stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const normalizedArray = array.map((el, index) => [el, index] as [T, number]);\n\n  normalizedArray.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n\n  return normalizedArray.map((el) => el[0]);\n}\n\nexport function getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string }\n) => number {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n","import type { ColumnConfig } from \"./types\";\n\nconst tableHeadConfig: ColumnConfig[] = [\n  {\n    field: \"email\",\n    fieldName: \"Email\",\n    align: \"left\",\n  },\n  { field: \"text\", fieldName: \"Комментарий\", align: \"center\" },\n  { field: \"country\", fieldName: \"Страна\", align: \"right\" },\n];\n\nexport { tableHeadConfig };\n","import { useMemo } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n} from \"@material-ui/core\";\n\nimport { useCommentStore } from \"../../stores\";\n\nimport { TableHead } from \"./main-page-table-head\";\nimport { getComparator, stableSort } from \"./main-page-table-utilities\";\nimport { tableHeadConfig } from \"./main-page-table-config\";\nimport { useCommentsTable } from \"./main-page-table-state\";\n\nimport type { PossibleDataKeys } from \"./types\";\n\nexport function MainPageTable() {\n  const { comments } = useCommentStore();\n  const {\n    order,\n    setOrder,\n    orderBy,\n    setOrderBy,\n    page,\n    setPage,\n    rowsPerPage,\n    setRowsPerPage,\n  } = useCommentsTable();\n\n  const rows = useMemo(\n    () =>\n      stableSort(comments, getComparator(order, orderBy)).slice(\n        page * rowsPerPage,\n        page * rowsPerPage + rowsPerPage\n      ),\n    [comments, order, orderBy, page, rowsPerPage]\n  );\n\n  const handleRequestSort = (\n    _: React.MouseEvent<unknown>,\n    property: PossibleDataKeys\n  ) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (_: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead\n          config={tableHeadConfig}\n          order={order}\n          orderBy={orderBy}\n          onRequestSort={handleRequestSort}\n        />\n        <TableBody>\n          {rows.map((row) => {\n            return (\n              <TableRow hover key={row.email}>\n                <TableCell align=\"left\">{row.email}</TableCell>\n                <TableCell align=\"center\">{row.text}</TableCell>\n                <TableCell align=\"right\">{row.country}</TableCell>\n              </TableRow>\n            );\n          })}\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </TableContainer>\n  );\n}\n","import { useState } from \"react\";\n\nimport type { Order, PossibleDataKeys } from \"./types\";\n\nconst DEFAULT_ORDER: Order = \"asc\";\nconst DEFAULT_ORDERBY_KEY: PossibleDataKeys = \"email\";\nconst DEFAULT_PAGE = 0;\nconst DEFAULT_ROWS_PER_PAGE = 5;\n\nfunction useCommentsTable() {\n  const [order, setOrder] = useState<Order>(DEFAULT_ORDER);\n  const [orderBy, setOrderBy] = useState<PossibleDataKeys>(DEFAULT_ORDERBY_KEY);\n  const [page, setPage] = useState(DEFAULT_PAGE);\n  const [rowsPerPage, setRowsPerPage] = useState(DEFAULT_ROWS_PER_PAGE);\n\n  return {\n    order,\n    setOrder,\n    orderBy,\n    setOrderBy,\n    page,\n    setPage,\n    rowsPerPage,\n    setRowsPerPage,\n  };\n}\n\nexport { useCommentsTable };\n","import { observer } from \"mobx-react-lite\";\n\nimport { useCommentStore } from \"../../stores\";\n\nimport { EmptyData } from \"../../components\";\nimport { MainPageTable } from \"./main-page-table\";\n\nfunction MainPageContentBase() {\n  const { comments } = useCommentStore();\n\n  if (comments.length === 0) {\n    return <EmptyData />;\n  }\n\n  return <MainPageTable />;\n}\n\nconst MainPageContent = observer(MainPageContentBase);\n\nexport { MainPageContent };\n","import { Container, Grid, Paper } from \"@material-ui/core\";\n\nimport { MainPageHeader } from \"./main-page-header\";\nimport { MainPageContent } from \"./main-page-content\";\n\nfunction MainPage() {\n  return (\n    <Container component=\"main\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <MainPageHeader />\n        </Grid>\n        <Grid item xs={12}>\n          <Paper>\n            <MainPageContent />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport { MainPage };\n","import { Switch, Redirect, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { ApplicationLayoutRoute } from \"../layout\";\n\nimport { MainPage, CommentPage, DocumentsPage } from \"../pages\";\n\nfunction Routes() {\n  const location = useLocation();\n\n  return (\n    <AnimatePresence exitBeforeEnter>\n      <Switch key={location.pathname} location={location}>\n        <ApplicationLayoutRoute path=\"/main\" component={MainPage} />\n        <ApplicationLayoutRoute path=\"/documents\" component={DocumentsPage} />\n        <ApplicationLayoutRoute path=\"/new-comment\" component={CommentPage} />\n\n        <Redirect to=\"/main\" />\n      </Switch>\n    </AnimatePresence>\n  );\n}\n\nexport { Routes };\n","export * from \"./config\";\n\nexport * from \"./types\";\n","export * from \"./store-context\";\nexport * from \"./store-provider\";\n\nexport * from \"./document\";\nexport * from \"./comment\";\n","import { useMemo } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport {\n  CssBaseline,\n  createMuiTheme,\n  ThemeProvider,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { ruRU } from \"@material-ui/core/locale\";\n\nimport { CountriesPreloader } from \"./api\";\nimport { StoreProvider } from \"./stores\";\nimport { Routes } from \"./routes\";\n\nconst containerSelector = \"root\";\nconst fullscreen = { width: \"100%\", height: \"100%\" };\n\nfunction AppProvider() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme(\n        {\n          palette: {\n            type: prefersDarkMode ? \"dark\" : \"light\",\n          },\n          overrides: {\n            MuiCssBaseline: {\n              \"@global\": {\n                html: { ...fullscreen },\n                body: { ...fullscreen },\n                [\"#\" + containerSelector]: {\n                  ...fullscreen,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                },\n              },\n            },\n          },\n        },\n        ruRU\n      ),\n    [prefersDarkMode]\n  );\n\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <CssBaseline />\n          <CountriesPreloader />\n          <Routes />\n        </BrowserRouter>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n}\n\nexport default AppProvider;\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}